The target architecture is assumed to be i386
=> 0xf0100040 <test_backtrace>:	push   %ebp

Breakpoint 1, test_backtrace (x=5) at kern/init.c:13
13	{
(gdb) info reg
eax            0x0	0
ecx            0x3d4	980
edx            0x3d5	981
ebx            0x10094	65684
esp            0xf010ffdc	0xf010ffdc                   <=====
ebp            0xf010fff8	0xf010fff8                   <=====
esi            0x10094	65684
edi            0x0	0
eip            0xf0100040	0xf0100040 <test_backtrace>
eflags         0x82	[ SF ]
cs             0x8	8
ss             0x10	16
ds             0x10	16
es             0x10	16
fs             0x10	16
gs             0x10	16
(gdb) 




entering test_backtrace 5
entering test_backtrace 4
entering test_backtrace 3
entering test_backtrace 2
entering test_backtrace 1
entering test_backtrace 0
Stack backtrace:
ebp f010ff18  eip f0100087  args 00000000 00000000 00000000 00000000 f010094c
ebp f010ff38  eip f0100069  args 00000000 00000001 f010ff78 00000000 f010094c
ebp f010ff58  eip f0100069  args 00000001 00000002 f010ff98 00000000 f010094c
ebp f010ff78  eip f0100069  args 00000002 00000003 f010ffb8 00000000 f010094c
ebp f010ff98  eip f0100069  args 00000003 00000004 00000000 00000000 00000000
ebp f010ffb8  eip f0100069  args 00000004 00000005 00000000 00010094 00010094
ebp f010ffd8  eip f01000ea  args 00000005 00001aac 00000644 00000000 00000000
ebp f010fff8  eip f010003e  args 00111021 00000000 00000000 00000000 00000000
leaving test_backtrace 0
leaving test_backtrace 1
leaving test_backtrace 2
leaving test_backtrace 3
leaving test_backtrace 4
leaving test_backtrace 5
Welcome to the JOS kernel monitor!
Type 'help' for a list of commands.

